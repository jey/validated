--- case1.types	2018-03-25 14:12:23.000000000 -0700
+++ case2.types	2018-03-25 14:12:24.000000000 -0700
@@ -15,7 +15,7 @@
     "end":26
   },
   {
-    "type":"Node<{|age: number, email: string, name: string|}>",
+    "type":"Node<(any | {|age: number, email: string, name: string|})>",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -45,7 +45,7 @@
     "end":24
   },
   {
-    "type":"Node<{|age: number, email: string, name: string|}>",
+    "type":"Node<(any | {|age: number, email: string, name: string|})>",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -165,7 +165,82 @@
     "end":86
   },
   {
-    "type":"type Person = ExtractType<Node<{|age: number, email: string, name: string|}>>",
+    "type":"Node<empty>",
+    "reasons":[],
+    "loc":{
+      "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+      "type":"SourceFile",
+      "start":{"line":11,"column":9,"offset":243},
+      "end":{"line":11,"column":19,"offset":254}
+    },
+    "path":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+    "line":11,
+    "endline":11,
+    "start":9,
+    "end":19
+  },
+  {
+    "type":"{|AnyNode: class AnyNode<V>, BooleanNode: class BooleanNode, ConstantNode: class ConstantNode<V>, Context: class Context, EnumerationNode: class EnumerationNode<V>, ExtractType: type ExtractType<N: Node<any>> = _ExtractType<*, N>, MappingNode: class MappingNode<V>, MaybeNode: class MaybeNode<V>, Node: class Node<V>, NodeSpec: type NodeSpec = {type: \"boolean\"} | {type: \"string\"} | {type: \"number\"} | {type: \"any\"} | {type: \"maybe\", value: NodeSpec} | {type: \"mapping\", value: NodeSpec} | {type: \"sequence\", value: NodeSpec} | {defaults: {[key: string]: any}, type: \"object\", values: {[key: string]: NodeSpec}}, NumberNode: class NumberNode, ObjectNode: class ObjectNode<S: {[name: string]: Node<any>}>, OneOfNode: class OneOfNode<V>, RecursiveNode: class RecursiveNode<V>, RefineNode: class RefineNode<V, RV>, SequenceNode: class SequenceNode<V>, StringNode: class StringNode, ValidateResult: type ValidateResult<V> = {+context: Context, +value: V}, ValidationError: any, any: AnyNode<any>, arrayOf: <V>(valueNode?: Node<V>) => SequenceNode<V>, boolean: BooleanNode, constant: <V>(value: V, eq?: (v1: mixed, v2: mixed) => boolean) => ConstantNode<V>, enumeration: <A>(...values: A[]) => EnumerationNode<A>, mapping: <V>(valueNode?: Node<V>) => MappingNode<V>, maybe: <V>(valueNode: Node<V>) => MaybeNode<V>, number: NumberNode, object: <S: {[name: string]: Node<any>}>(values: S, defaults: ?Object) => Node<empty>, oneOf: ((<A, B, C, D, E, F, G, H, I, J, K>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>, g: Node<G>, h: Node<H>, i: Node<I>, j: Node<J>, k: Node<K>) => Node<(A | B | C | D | E | F | G | H | I | J | K)>) & (<A, B, C, D, E, F, G, H, I, J>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>, g: Node<G>, h: Node<H>, i: Node<I>, j: Node<J>) => Node<(A | B | C | D | E | F | G | H | I | J)>) & (<A, B, C, D, E, F, G, H, I>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>, g: Node<G>, h: Node<H>, i: Node<I>) => Node<(A | B | C | D | E | F | G | H | I)>) & (<A, B, C, D, E, F, G, H>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>, g: Node<G>, h: Node<H>) => Node<(A | B | C | D | E | F | G | H)>) & (<A, B, C, D, E, F, G>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>, g: Node<G>) => Node<(A | B | C | D | E | F | G)>) & (<A, B, C, D, E, F>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>, f: Node<F>) => Node<(A | B | C | D | E | F)>) & (<A, B, C, D, E>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>, e: Node<E>) => Node<(A | B | C | D | E)>) & (<A, B, C, D>(a: Node<A>, b: Node<B>, c: Node<C>, d: Node<D>) => Node<(A | B | C | D)>) & (<A, B, C>(a: Node<A>, b: Node<B>, c: Node<C>) => Node<(A | B | C)>) & (<A, B>(a: Node<A>, b: Node<B>) => Node<(A | B)>) & (<A>(a: Node<A>) => Node<A>)), partialObject: <S: {[name: string]: Node<any>}>(values: S, defaults: ?Object) => Node<empty>, recur: <V>(thunk: (node: Node<V>) => Node<V>) => Node<V>, sequence: <V>(valueNode?: Node<V>) => SequenceNode<V>, string: StringNode, validationError: (originalMessage: ?GenericMessage, contextMessages: GenericMessage[]) => any|}",
+    "reasons":[],
+    "loc":{
+      "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+      "type":"SourceFile",
+      "start":{"line":11,"column":23,"offset":257},
+      "end":{"line":11,"column":23,"offset":258}
+    },
+    "path":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+    "line":11,
+    "endline":11,
+    "start":23,
+    "end":23
+  },
+  {
+    "type":"Node<empty>",
+    "reasons":[],
+    "loc":{
+      "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+      "type":"SourceFile",
+      "start":{"line":11,"column":23,"offset":257},
+      "end":{"line":11,"column":62,"offset":297}
+    },
+    "path":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+    "line":11,
+    "endline":11,
+    "start":23,
+    "end":62
+  },
+  {
+    "type":"{|owner: Node<(any | {|age: number, email: string, name: string|})>|}",
+    "reasons":[],
+    "loc":{
+      "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+      "type":"SourceFile",
+      "start":{"line":11,"column":39,"offset":273},
+      "end":{"line":11,"column":61,"offset":296}
+    },
+    "path":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+    "line":11,
+    "endline":11,
+    "start":39,
+    "end":61
+  },
+  {
+    "type":"Node<(any | {|age: number, email: string, name: string|})>",
+    "reasons":[],
+    "loc":{
+      "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+      "type":"SourceFile",
+      "start":{"line":11,"column":48,"offset":282},
+      "end":{"line":11,"column":59,"offset":294}
+    },
+    "path":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
+    "line":11,
+    "endline":11,
+    "start":48,
+    "end":59
+  },
+  {
+    "type":"type Person = ExtractType<Node<(any | {|age: number, email: string, name: string|})>>",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -210,7 +285,7 @@
     "end":24
   },
   {
-    "type":"{|age: number, email: string, name: string|}",
+    "type":"any | {|age: number, email: string, name: string|}",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -225,7 +300,7 @@
     "end":51
   },
   {
-    "type":"Node<{|age: number, email: string, name: string|}>",
+    "type":"Node<(any | {|age: number, email: string, name: string|})>",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -285,7 +360,7 @@
     "end":27
   },
   {
-    "type":"string",
+    "type":"any | string",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
@@ -330,7 +405,7 @@
     "end":30
   },
   {
-    "type":"string",
+    "type":"any | string",
     "reasons":[],
     "loc":{
       "source":"/Users/jey/proj/validated/inference_bug/caseN/test_flow.js",
